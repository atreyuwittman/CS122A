
Speaker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002ac  00800100  000007d8  0000086c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000026  008003ac  008003ac  00000b18  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b18  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000102d  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a56  00000000  00000000  00001c6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000686  00000000  00000000  000026c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  00002d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000673  00000000  00000000  00002f28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000610  00000000  00000000  0000359b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003bab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	8c c0       	rjmp	.+280    	; 0x14e <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	ad c1       	rjmp	.+858    	; 0x3a8 <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ed       	ldi	r30, 0xD8	; 216
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 3a       	cpi	r26, 0xAC	; 172
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	23 e0       	ldi	r18, 0x03	; 3
  b4:	ac ea       	ldi	r26, 0xAC	; 172
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 3d       	cpi	r26, 0xD2	; 210
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	81 d1       	rcall	.+770    	; 0x3c6 <main>
  c4:	87 c3       	rjmp	.+1806   	; 0x7d4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SMTick2>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  c8:	9c 01       	movw	r18, r24
  ca:	90 91 cf 03 	lds	r25, 0x03CF	; 0x8003cf <INTCHIP_State>
  ce:	99 23       	and	r25, r25
  d0:	19 f0       	breq	.+6      	; 0xd8 <SMTick2+0x10>
  d2:	91 30       	cpi	r25, 0x01	; 1
  d4:	39 f0       	breq	.+14     	; 0xe4 <SMTick2+0x1c>
  d6:	04 c0       	rjmp	.+8      	; 0xe0 <SMTick2+0x18>
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <INTCHIP_State>
  de:	02 c0       	rjmp	.+4      	; 0xe4 <SMTick2+0x1c>
  e0:	91 30       	cpi	r25, 0x01	; 1
  e2:	79 f4       	brne	.+30     	; 0x102 <SMTick2+0x3a>
  e4:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <recievedData>
  e8:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <read>
  ec:	88 23       	and	r24, r24
  ee:	11 f0       	breq	.+4      	; 0xf4 <SMTick2+0x2c>
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	82 b9       	out	0x02, r24	; 2
  f4:	80 91 d1 03 	lds	r24, 0x03D1	; 0x8003d1 <prev>
  f8:	90 91 d0 03 	lds	r25, 0x03D0	; 0x8003d0 <read>
  fc:	98 13       	cpse	r25, r24
  fe:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <read>
 102:	c9 01       	movw	r24, r18
 104:	08 95       	ret

00000106 <TimerOn>:
 106:	8b e0       	ldi	r24, 0x0B	; 11
 108:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 10c:	8d e7       	ldi	r24, 0x7D	; 125
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 114:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 11e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 122:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 126:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 12a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 12e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 132:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 136:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <_avr_timer_cntcurr>
 13a:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <_avr_timer_cntcurr+0x1>
 13e:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <_avr_timer_cntcurr+0x2>
 142:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <_avr_timer_cntcurr+0x3>
 146:	8f b7       	in	r24, 0x3f	; 63
 148:	80 68       	ori	r24, 0x80	; 128
 14a:	8f bf       	out	0x3f, r24	; 63
 14c:	08 95       	ret

0000014e <__vector_13>:
 14e:	1f 92       	push	r1
 150:	0f 92       	push	r0
 152:	0f b6       	in	r0, 0x3f	; 63
 154:	0f 92       	push	r0
 156:	11 24       	eor	r1, r1
 158:	8f 93       	push	r24
 15a:	9f 93       	push	r25
 15c:	af 93       	push	r26
 15e:	bf 93       	push	r27
 160:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <_avr_timer_cntcurr>
 164:	90 91 ca 03 	lds	r25, 0x03CA	; 0x8003ca <_avr_timer_cntcurr+0x1>
 168:	a0 91 cb 03 	lds	r26, 0x03CB	; 0x8003cb <_avr_timer_cntcurr+0x2>
 16c:	b0 91 cc 03 	lds	r27, 0x03CC	; 0x8003cc <_avr_timer_cntcurr+0x3>
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	a1 09       	sbc	r26, r1
 174:	b1 09       	sbc	r27, r1
 176:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <_avr_timer_cntcurr>
 17a:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <_avr_timer_cntcurr+0x1>
 17e:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <_avr_timer_cntcurr+0x2>
 182:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <_avr_timer_cntcurr+0x3>
 186:	89 2b       	or	r24, r25
 188:	8a 2b       	or	r24, r26
 18a:	8b 2b       	or	r24, r27
 18c:	99 f4       	brne	.+38     	; 0x1b4 <__vector_13+0x66>
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <TimerFlag>
 194:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 198:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 19c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1a0:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1a4:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <_avr_timer_cntcurr>
 1a8:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <_avr_timer_cntcurr+0x1>
 1ac:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <_avr_timer_cntcurr+0x2>
 1b0:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <_avr_timer_cntcurr+0x3>
 1b4:	bf 91       	pop	r27
 1b6:	af 91       	pop	r26
 1b8:	9f 91       	pop	r25
 1ba:	8f 91       	pop	r24
 1bc:	0f 90       	pop	r0
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	0f 90       	pop	r0
 1c2:	1f 90       	pop	r1
 1c4:	18 95       	reti

000001c6 <TimerSet>:
 1c6:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 1ca:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 1ce:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 1d2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 1d6:	60 93 c9 03 	sts	0x03C9, r22	; 0x8003c9 <_avr_timer_cntcurr>
 1da:	70 93 ca 03 	sts	0x03CA, r23	; 0x8003ca <_avr_timer_cntcurr+0x1>
 1de:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <_avr_timer_cntcurr+0x2>
 1e2:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <_avr_timer_cntcurr+0x3>
 1e6:	08 95       	ret

000001e8 <set_PWM>:
 1e8:	cf 92       	push	r12
 1ea:	df 92       	push	r13
 1ec:	ef 92       	push	r14
 1ee:	ff 92       	push	r15
 1f0:	6b 01       	movw	r12, r22
 1f2:	7c 01       	movw	r14, r24
 1f4:	9b 01       	movw	r18, r22
 1f6:	ac 01       	movw	r20, r24
 1f8:	60 91 c2 03 	lds	r22, 0x03C2	; 0x8003c2 <current_frequency.1916>
 1fc:	70 91 c3 03 	lds	r23, 0x03C3	; 0x8003c3 <current_frequency.1916+0x1>
 200:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <current_frequency.1916+0x2>
 204:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <current_frequency.1916+0x3>
 208:	6c d1       	rcall	.+728    	; 0x4e2 <__cmpsf2>
 20a:	88 23       	and	r24, r24
 20c:	09 f4       	brne	.+2      	; 0x210 <set_PWM+0x28>
 20e:	40 c0       	rjmp	.+128    	; 0x290 <set_PWM+0xa8>
 210:	20 e0       	ldi	r18, 0x00	; 0
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	a9 01       	movw	r20, r18
 216:	c7 01       	movw	r24, r14
 218:	b6 01       	movw	r22, r12
 21a:	63 d1       	rcall	.+710    	; 0x4e2 <__cmpsf2>
 21c:	81 11       	cpse	r24, r1
 21e:	04 c0       	rjmp	.+8      	; 0x228 <set_PWM+0x40>
 220:	85 b5       	in	r24, 0x25	; 37
 222:	88 70       	andi	r24, 0x08	; 8
 224:	85 bd       	out	0x25, r24	; 37
 226:	03 c0       	rjmp	.+6      	; 0x22e <set_PWM+0x46>
 228:	85 b5       	in	r24, 0x25	; 37
 22a:	83 60       	ori	r24, 0x03	; 3
 22c:	85 bd       	out	0x25, r24	; 37
 22e:	28 e5       	ldi	r18, 0x58	; 88
 230:	39 e3       	ldi	r19, 0x39	; 57
 232:	44 e7       	ldi	r20, 0x74	; 116
 234:	5f e3       	ldi	r21, 0x3F	; 63
 236:	c7 01       	movw	r24, r14
 238:	b6 01       	movw	r22, r12
 23a:	53 d1       	rcall	.+678    	; 0x4e2 <__cmpsf2>
 23c:	88 23       	and	r24, r24
 23e:	1c f4       	brge	.+6      	; 0x246 <set_PWM+0x5e>
 240:	8f ef       	ldi	r24, 0xFF	; 255
 242:	87 bd       	out	0x27, r24	; 39
 244:	1c c0       	rjmp	.+56     	; 0x27e <set_PWM+0x96>
 246:	20 e0       	ldi	r18, 0x00	; 0
 248:	34 e2       	ldi	r19, 0x24	; 36
 24a:	44 ef       	ldi	r20, 0xF4	; 244
 24c:	56 e4       	ldi	r21, 0x46	; 70
 24e:	c7 01       	movw	r24, r14
 250:	b6 01       	movw	r22, r12
 252:	59 d2       	rcall	.+1202   	; 0x706 <__gesf2>
 254:	18 16       	cp	r1, r24
 256:	14 f4       	brge	.+4      	; 0x25c <set_PWM+0x74>
 258:	17 bc       	out	0x27, r1	; 39
 25a:	11 c0       	rjmp	.+34     	; 0x27e <set_PWM+0x96>
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	40 e0       	ldi	r20, 0x00	; 0
 262:	53 e4       	ldi	r21, 0x43	; 67
 264:	c7 01       	movw	r24, r14
 266:	b6 01       	movw	r22, r12
 268:	52 d2       	rcall	.+1188   	; 0x70e <__mulsf3>
 26a:	9b 01       	movw	r18, r22
 26c:	ac 01       	movw	r20, r24
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	74 e2       	ldi	r23, 0x24	; 36
 272:	84 ef       	ldi	r24, 0xF4	; 244
 274:	9a e4       	ldi	r25, 0x4A	; 74
 276:	39 d1       	rcall	.+626    	; 0x4ea <__divsf3>
 278:	a0 d1       	rcall	.+832    	; 0x5ba <__fixsfsi>
 27a:	61 50       	subi	r22, 0x01	; 1
 27c:	67 bd       	out	0x27, r22	; 39
 27e:	16 bc       	out	0x26, r1	; 38
 280:	c0 92 c2 03 	sts	0x03C2, r12	; 0x8003c2 <current_frequency.1916>
 284:	d0 92 c3 03 	sts	0x03C3, r13	; 0x8003c3 <current_frequency.1916+0x1>
 288:	e0 92 c4 03 	sts	0x03C4, r14	; 0x8003c4 <current_frequency.1916+0x2>
 28c:	f0 92 c5 03 	sts	0x03C5, r15	; 0x8003c5 <current_frequency.1916+0x3>
 290:	ff 90       	pop	r15
 292:	ef 90       	pop	r14
 294:	df 90       	pop	r13
 296:	cf 90       	pop	r12
 298:	08 95       	ret

0000029a <SMTick1>:
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	00 97       	sbiw	r24, 0x00	; 0
 2a0:	19 f0       	breq	.+6      	; 0x2a8 <SMTick1+0xe>
 2a2:	01 97       	sbiw	r24, 0x01	; 1
 2a4:	59 f0       	breq	.+22     	; 0x2bc <SMTick1+0x22>
 2a6:	14 c0       	rjmp	.+40     	; 0x2d0 <SMTick1+0x36>
 2a8:	91 e0       	ldi	r25, 0x01	; 1
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	20 91 c8 03 	lds	r18, 0x03C8	; 0x8003c8 <currentNote>
 2b0:	25 35       	cpi	r18, 0x55	; 85
 2b2:	08 f0       	brcs	.+2      	; 0x2b6 <SMTick1+0x1c>
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	c9 2f       	mov	r28, r25
 2b8:	d8 2f       	mov	r29, r24
 2ba:	14 c0       	rjmp	.+40     	; 0x2e4 <SMTick1+0x4a>
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	20 91 c8 03 	lds	r18, 0x03C8	; 0x8003c8 <currentNote>
 2c4:	25 35       	cpi	r18, 0x55	; 85
 2c6:	08 f0       	brcs	.+2      	; 0x2ca <SMTick1+0x30>
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	c9 2f       	mov	r28, r25
 2cc:	d8 2f       	mov	r29, r24
 2ce:	0a c0       	rjmp	.+20     	; 0x2e4 <SMTick1+0x4a>
 2d0:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <currentNote>
 2d4:	81 50       	subi	r24, 0x01	; 1
 2d6:	21 e0       	ldi	r18, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	84 35       	cpi	r24, 0x54	; 84
 2dc:	08 f0       	brcs	.+2      	; 0x2e0 <SMTick1+0x46>
 2de:	20 e0       	ldi	r18, 0x00	; 0
 2e0:	c2 2f       	mov	r28, r18
 2e2:	d9 2f       	mov	r29, r25
 2e4:	20 97       	sbiw	r28, 0x00	; 0
 2e6:	21 f0       	breq	.+8      	; 0x2f0 <SMTick1+0x56>
 2e8:	c1 30       	cpi	r28, 0x01	; 1
 2ea:	d1 05       	cpc	r29, r1
 2ec:	19 f1       	breq	.+70     	; 0x334 <SMTick1+0x9a>
 2ee:	4f c0       	rjmp	.+158    	; 0x38e <SMTick1+0xf4>
 2f0:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <currentNote>
 2f4:	85 35       	cpi	r24, 0x55	; 85
 2f6:	c8 f0       	brcs	.+50     	; 0x32a <SMTick1+0x90>
 2f8:	60 e0       	ldi	r22, 0x00	; 0
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	cb 01       	movw	r24, r22
 2fe:	74 df       	rcall	.-280    	; 0x1e8 <set_PWM>
 300:	64 ef       	ldi	r22, 0xF4	; 244
 302:	71 e0       	ldi	r23, 0x01	; 1
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	5e df       	rcall	.-324    	; 0x1c6 <TimerSet>
 30a:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <TimerFlag>
 30e:	88 23       	and	r24, r24
 310:	e1 f3       	breq	.-8      	; 0x30a <SMTick1+0x70>
 312:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <TimerFlag>
 316:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <currentNote>
 31a:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <currentDuration>
 31e:	6a ef       	ldi	r22, 0xFA	; 250
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	4f df       	rcall	.-354    	; 0x1c6 <TimerSet>
 328:	32 c0       	rjmp	.+100    	; 0x38e <SMTick1+0xf4>
 32a:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <currentNote>
 32e:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <currentDuration>
 332:	2d c0       	rjmp	.+90     	; 0x38e <SMTick1+0xf4>
 334:	e0 91 c8 03 	lds	r30, 0x03C8	; 0x8003c8 <currentNote>
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	ee 0f       	add	r30, r30
 33c:	ff 1f       	adc	r31, r31
 33e:	ee 0f       	add	r30, r30
 340:	ff 1f       	adc	r31, r31
 342:	e8 5a       	subi	r30, 0xA8	; 168
 344:	fd 4f       	sbci	r31, 0xFD	; 253
 346:	60 81       	ld	r22, Z
 348:	71 81       	ldd	r23, Z+1	; 0x01
 34a:	82 81       	ldd	r24, Z+2	; 0x02
 34c:	93 81       	ldd	r25, Z+3	; 0x03
 34e:	4c df       	rcall	.-360    	; 0x1e8 <set_PWM>
 350:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <TimerFlag>
 354:	88 23       	and	r24, r24
 356:	e1 f3       	breq	.-8      	; 0x350 <SMTick1+0xb6>
 358:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <TimerFlag>
 35c:	e0 91 c7 03 	lds	r30, 0x03C7	; 0x8003c7 <currentDuration>
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	ee 0f       	add	r30, r30
 364:	ff 1f       	adc	r31, r31
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	ec 5f       	subi	r30, 0xFC	; 252
 36c:	fe 4f       	sbci	r31, 0xFE	; 254
 36e:	60 81       	ld	r22, Z
 370:	71 81       	ldd	r23, Z+1	; 0x01
 372:	82 81       	ldd	r24, Z+2	; 0x02
 374:	93 81       	ldd	r25, Z+3	; 0x03
 376:	26 d1       	rcall	.+588    	; 0x5c4 <__fixunssfsi>
 378:	26 df       	rcall	.-436    	; 0x1c6 <TimerSet>
 37a:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <currentNote>
 37e:	8f 5f       	subi	r24, 0xFF	; 255
 380:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <currentNote>
 384:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <currentDuration>
 388:	8f 5f       	subi	r24, 0xFF	; 255
 38a:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <currentDuration>
 38e:	ce 01       	movw	r24, r28
 390:	df 91       	pop	r29
 392:	cf 91       	pop	r28
 394:	08 95       	ret

00000396 <PWM_on>:
 396:	89 e4       	ldi	r24, 0x49	; 73
 398:	84 bd       	out	0x24, r24	; 36
 39a:	8b e0       	ldi	r24, 0x0B	; 11
 39c:	85 bd       	out	0x25, r24	; 37
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	cb 01       	movw	r24, r22
 3a4:	21 cf       	rjmp	.-446    	; 0x1e8 <set_PWM>
 3a6:	08 95       	ret

000003a8 <__vector_19>:
unsigned char currentDuration = 0x00;
unsigned char eeprom_address = 0x00, read_char;


unsigned char recievedData = 0x00;
ISR(SPI_STC_vect) {
 3a8:	1f 92       	push	r1
 3aa:	0f 92       	push	r0
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	0f 92       	push	r0
 3b0:	11 24       	eor	r1, r1
 3b2:	8f 93       	push	r24
	
	recievedData = SPDR;
 3b4:	8e b5       	in	r24, 0x2e	; 46
 3b6:	80 93 c6 03 	sts	0x03C6, r24	; 0x8003c6 <recievedData>
}
 3ba:	8f 91       	pop	r24
 3bc:	0f 90       	pop	r0
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	0f 90       	pop	r0
 3c2:	1f 90       	pop	r1
 3c4:	18 95       	reti

000003c6 <main>:


// --------END User defined FSMs-----------------------------------------------

// Implement scheduler code from PES.
int main() {
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	00 d0       	rcall	.+0      	; 0x3cc <main+0x6>
 3cc:	00 d0       	rcall	.+0      	; 0x3ce <main+0x8>
 3ce:	cd b7       	in	r28, 0x3d	; 61
 3d0:	de b7       	in	r29, 0x3e	; 62
	// Set Data Direction Registers
	// Buttons PORTA[0-7], set AVR PORTA to pull down logic
	DDRA = 0xFF; PORTA = 0x00;
 3d2:	8f ef       	ldi	r24, 0xFF	; 255
 3d4:	81 b9       	out	0x01, r24	; 1
 3d6:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x0F; PORTB = 0x0F;
 3d8:	9f e0       	ldi	r25, 0x0F	; 15
 3da:	94 b9       	out	0x04, r25	; 4
 3dc:	95 b9       	out	0x05, r25	; 5
	DDRD = 0xFF; PORTD = 0x00;
 3de:	8a b9       	out	0x0a, r24	; 10
 3e0:	1b b8       	out	0x0b, r1	; 11
	unsigned long int SMTick1_period = SMTick1_calc/GCD;
	unsigned long int SMTick2_period = SMTick2_calc/GCD;

	//Declare an array of tasks 
	static task task1, task2, task3;
	task *tasks[] = { &task1, &task2 };
 3e2:	a7 eb       	ldi	r26, 0xB7	; 183
 3e4:	b3 e0       	ldi	r27, 0x03	; 3
 3e6:	ba 83       	std	Y+2, r27	; 0x02
 3e8:	a9 83       	std	Y+1, r26	; 0x01
 3ea:	ec ea       	ldi	r30, 0xAC	; 172
 3ec:	f3 e0       	ldi	r31, 0x03	; 3
 3ee:	fc 83       	std	Y+4, r31	; 0x04
 3f0:	eb 83       	std	Y+3, r30	; 0x03
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = -1;//Task initial state.
 3f2:	8c 93       	st	X, r24
	task1.period = SMTick1_period;//Task Period.
 3f4:	41 e0       	ldi	r20, 0x01	; 1
 3f6:	50 e0       	ldi	r21, 0x00	; 0
 3f8:	60 e0       	ldi	r22, 0x00	; 0
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	11 96       	adiw	r26, 0x01	; 1
 3fe:	4d 93       	st	X+, r20
 400:	5d 93       	st	X+, r21
 402:	6d 93       	st	X+, r22
 404:	7c 93       	st	X, r23
 406:	14 97       	sbiw	r26, 0x04	; 4
	task1.elapsedTime = SMTick1_period;//Task current elapsed time.
 408:	15 96       	adiw	r26, 0x05	; 5
 40a:	4d 93       	st	X+, r20
 40c:	5d 93       	st	X+, r21
 40e:	6d 93       	st	X+, r22
 410:	7c 93       	st	X, r23
 412:	18 97       	sbiw	r26, 0x08	; 8
	task1.TickFct = &SMTick1;//Function pointer for the tick.
 414:	2d e4       	ldi	r18, 0x4D	; 77
 416:	31 e0       	ldi	r19, 0x01	; 1
 418:	1a 96       	adiw	r26, 0x0a	; 10
 41a:	3c 93       	st	X, r19
 41c:	2e 93       	st	-X, r18
 41e:	19 97       	sbiw	r26, 0x09	; 9

	// Task 2
	task2.state = -1;//Task initial state.
 420:	80 83       	st	Z, r24
	task2.period = SMTick2_period;//Task Period.
 422:	41 83       	std	Z+1, r20	; 0x01
 424:	52 83       	std	Z+2, r21	; 0x02
 426:	63 83       	std	Z+3, r22	; 0x03
 428:	74 83       	std	Z+4, r23	; 0x04
	task2.elapsedTime = SMTick2_period;//Task current elapsed time.
 42a:	45 83       	std	Z+5, r20	; 0x05
 42c:	56 83       	std	Z+6, r21	; 0x06
 42e:	67 83       	std	Z+7, r22	; 0x07
 430:	70 87       	std	Z+8, r23	; 0x08
	task2.TickFct = &SMTick2;//Function pointer for the tick.
 432:	84 e6       	ldi	r24, 0x64	; 100
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	92 87       	std	Z+10, r25	; 0x0a
 438:	81 87       	std	Z+9, r24	; 0x09
	// Set the timer and turn it on
	TimerSet(tmpGCD);
 43a:	6c e2       	ldi	r22, 0x2C	; 44
 43c:	71 e0       	ldi	r23, 0x01	; 1
 43e:	80 e0       	ldi	r24, 0x00	; 0
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	c1 de       	rcall	.-638    	; 0x1c6 <TimerSet>
	TimerOn();
 444:	60 de       	rcall	.-832    	; 0x106 <TimerOn>
	PWM_on();
 446:	a7 df       	rcall	.-178    	; 0x396 <PWM_on>
 448:	60 e0       	ldi	r22, 0x00	; 0
	set_PWM(0);
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	cb 01       	movw	r24, r22
 44e:	cc de       	rcall	.-616    	; 0x1e8 <set_PWM>
 450:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <currentNote>
	unsigned short i; // Scheduler for-loop iterator
	//set currentDuration to set value if currentNote == 0x00
	if(currentNote == 0x00){
 454:	81 11       	cpse	r24, r1
 456:	06 c0       	rjmp	.+12     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 458:	6a ef       	ldi	r22, 0xFA	; 250
		TimerSet(250);
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	b2 de       	rcall	.-668    	; 0x1c6 <TimerSet>
 462:	02 c0       	rjmp	.+4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 464:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <currentDuration>
	}
	else{
		currentDuration = currentNote;
 468:	6e 01       	movw	r12, r28
 46a:	85 e0       	ldi	r24, 0x05	; 5
 46c:	c8 0e       	add	r12, r24
 46e:	d1 1c       	adc	r13, r1
 470:	de 01       	movw	r26, r28
 472:	11 96       	adiw	r26, 0x01	; 1
 474:	7d 01       	movw	r14, r26
 476:	f7 01       	movw	r30, r14
	while(1) {
		// Scheduler code
		
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 478:	01 91       	ld	r16, Z+
 47a:	11 91       	ld	r17, Z+
 47c:	7f 01       	movw	r14, r30
 47e:	d8 01       	movw	r26, r16
 480:	15 96       	adiw	r26, 0x05	; 5
 482:	4d 91       	ld	r20, X+
 484:	5d 91       	ld	r21, X+
 486:	6d 91       	ld	r22, X+
 488:	7c 91       	ld	r23, X
 48a:	18 97       	sbiw	r26, 0x08	; 8
 48c:	11 96       	adiw	r26, 0x01	; 1
 48e:	8d 91       	ld	r24, X+
 490:	9d 91       	ld	r25, X+
 492:	0d 90       	ld	r0, X+
 494:	bc 91       	ld	r27, X
 496:	a0 2d       	mov	r26, r0
 498:	48 17       	cp	r20, r24
 49a:	59 07       	cpc	r21, r25
 49c:	6a 07       	cpc	r22, r26
 49e:	7b 07       	cpc	r23, r27
 4a0:	81 f4       	brne	.+32     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4a2:	f8 01       	movw	r30, r16
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 4a4:	80 81       	ld	r24, Z
 4a6:	01 84       	ldd	r0, Z+9	; 0x09
 4a8:	f2 85       	ldd	r31, Z+10	; 0x0a
 4aa:	e0 2d       	mov	r30, r0
 4ac:	08 2e       	mov	r0, r24
 4ae:	00 0c       	add	r0, r0
 4b0:	99 0b       	sbc	r25, r25
 4b2:	09 95       	icall
 4b4:	d8 01       	movw	r26, r16
 4b6:	8c 93       	st	X, r24
 4b8:	f8 01       	movw	r30, r16
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 4ba:	15 82       	std	Z+5, r1	; 0x05
 4bc:	16 82       	std	Z+6, r1	; 0x06
 4be:	17 82       	std	Z+7, r1	; 0x07
 4c0:	10 86       	std	Z+8, r1	; 0x08
 4c2:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 1;
 4c4:	85 81       	ldd	r24, Z+5	; 0x05
 4c6:	96 81       	ldd	r25, Z+6	; 0x06
 4c8:	a7 81       	ldd	r26, Z+7	; 0x07
 4ca:	b0 85       	ldd	r27, Z+8	; 0x08
 4cc:	01 96       	adiw	r24, 0x01	; 1
 4ce:	a1 1d       	adc	r26, r1
 4d0:	b1 1d       	adc	r27, r1
 4d2:	85 83       	std	Z+5, r24	; 0x05
 4d4:	96 83       	std	Z+6, r25	; 0x06
 4d6:	a7 83       	std	Z+7, r26	; 0x07
 4d8:	b0 87       	std	Z+8, r27	; 0x08
 4da:	ec 14       	cp	r14, r12
		currentDuration = currentNote;
	}
	while(1) {
		// Scheduler code
		
		for ( i = 0; i < numTasks; i++ ) {
 4dc:	fd 04       	cpc	r15, r13
 4de:	59 f6       	brne	.-106    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 4e0:	c7 cf       	rjmp	.-114    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>

000004e2 <__cmpsf2>:
 4e2:	9c d0       	rcall	.+312    	; 0x61c <__fp_cmp>
 4e4:	08 f4       	brcc	.+2      	; 0x4e8 <__cmpsf2+0x6>
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	08 95       	ret

000004ea <__divsf3>:
 4ea:	0c d0       	rcall	.+24     	; 0x504 <__divsf3x>
 4ec:	d2 c0       	rjmp	.+420    	; 0x692 <__fp_round>
 4ee:	ca d0       	rcall	.+404    	; 0x684 <__fp_pscB>
 4f0:	40 f0       	brcs	.+16     	; 0x502 <__divsf3+0x18>
 4f2:	c1 d0       	rcall	.+386    	; 0x676 <__fp_pscA>
 4f4:	30 f0       	brcs	.+12     	; 0x502 <__divsf3+0x18>
 4f6:	21 f4       	brne	.+8      	; 0x500 <__divsf3+0x16>
 4f8:	5f 3f       	cpi	r21, 0xFF	; 255
 4fa:	19 f0       	breq	.+6      	; 0x502 <__divsf3+0x18>
 4fc:	b3 c0       	rjmp	.+358    	; 0x664 <__fp_inf>
 4fe:	51 11       	cpse	r21, r1
 500:	fc c0       	rjmp	.+504    	; 0x6fa <__fp_szero>
 502:	b6 c0       	rjmp	.+364    	; 0x670 <__fp_nan>

00000504 <__divsf3x>:
 504:	d7 d0       	rcall	.+430    	; 0x6b4 <__fp_split3>
 506:	98 f3       	brcs	.-26     	; 0x4ee <__divsf3+0x4>

00000508 <__divsf3_pse>:
 508:	99 23       	and	r25, r25
 50a:	c9 f3       	breq	.-14     	; 0x4fe <__divsf3+0x14>
 50c:	55 23       	and	r21, r21
 50e:	b1 f3       	breq	.-20     	; 0x4fc <__divsf3+0x12>
 510:	95 1b       	sub	r25, r21
 512:	55 0b       	sbc	r21, r21
 514:	bb 27       	eor	r27, r27
 516:	aa 27       	eor	r26, r26
 518:	62 17       	cp	r22, r18
 51a:	73 07       	cpc	r23, r19
 51c:	84 07       	cpc	r24, r20
 51e:	38 f0       	brcs	.+14     	; 0x52e <__divsf3_pse+0x26>
 520:	9f 5f       	subi	r25, 0xFF	; 255
 522:	5f 4f       	sbci	r21, 0xFF	; 255
 524:	22 0f       	add	r18, r18
 526:	33 1f       	adc	r19, r19
 528:	44 1f       	adc	r20, r20
 52a:	aa 1f       	adc	r26, r26
 52c:	a9 f3       	breq	.-22     	; 0x518 <__divsf3_pse+0x10>
 52e:	33 d0       	rcall	.+102    	; 0x596 <__divsf3_pse+0x8e>
 530:	0e 2e       	mov	r0, r30
 532:	3a f0       	brmi	.+14     	; 0x542 <__divsf3_pse+0x3a>
 534:	e0 e8       	ldi	r30, 0x80	; 128
 536:	30 d0       	rcall	.+96     	; 0x598 <__divsf3_pse+0x90>
 538:	91 50       	subi	r25, 0x01	; 1
 53a:	50 40       	sbci	r21, 0x00	; 0
 53c:	e6 95       	lsr	r30
 53e:	00 1c       	adc	r0, r0
 540:	ca f7       	brpl	.-14     	; 0x534 <__divsf3_pse+0x2c>
 542:	29 d0       	rcall	.+82     	; 0x596 <__divsf3_pse+0x8e>
 544:	fe 2f       	mov	r31, r30
 546:	27 d0       	rcall	.+78     	; 0x596 <__divsf3_pse+0x8e>
 548:	66 0f       	add	r22, r22
 54a:	77 1f       	adc	r23, r23
 54c:	88 1f       	adc	r24, r24
 54e:	bb 1f       	adc	r27, r27
 550:	26 17       	cp	r18, r22
 552:	37 07       	cpc	r19, r23
 554:	48 07       	cpc	r20, r24
 556:	ab 07       	cpc	r26, r27
 558:	b0 e8       	ldi	r27, 0x80	; 128
 55a:	09 f0       	breq	.+2      	; 0x55e <__divsf3_pse+0x56>
 55c:	bb 0b       	sbc	r27, r27
 55e:	80 2d       	mov	r24, r0
 560:	bf 01       	movw	r22, r30
 562:	ff 27       	eor	r31, r31
 564:	93 58       	subi	r25, 0x83	; 131
 566:	5f 4f       	sbci	r21, 0xFF	; 255
 568:	2a f0       	brmi	.+10     	; 0x574 <__divsf3_pse+0x6c>
 56a:	9e 3f       	cpi	r25, 0xFE	; 254
 56c:	51 05       	cpc	r21, r1
 56e:	68 f0       	brcs	.+26     	; 0x58a <__divsf3_pse+0x82>
 570:	79 c0       	rjmp	.+242    	; 0x664 <__fp_inf>
 572:	c3 c0       	rjmp	.+390    	; 0x6fa <__fp_szero>
 574:	5f 3f       	cpi	r21, 0xFF	; 255
 576:	ec f3       	brlt	.-6      	; 0x572 <__divsf3_pse+0x6a>
 578:	98 3e       	cpi	r25, 0xE8	; 232
 57a:	dc f3       	brlt	.-10     	; 0x572 <__divsf3_pse+0x6a>
 57c:	86 95       	lsr	r24
 57e:	77 95       	ror	r23
 580:	67 95       	ror	r22
 582:	b7 95       	ror	r27
 584:	f7 95       	ror	r31
 586:	9f 5f       	subi	r25, 0xFF	; 255
 588:	c9 f7       	brne	.-14     	; 0x57c <__divsf3_pse+0x74>
 58a:	88 0f       	add	r24, r24
 58c:	91 1d       	adc	r25, r1
 58e:	96 95       	lsr	r25
 590:	87 95       	ror	r24
 592:	97 f9       	bld	r25, 7
 594:	08 95       	ret
 596:	e1 e0       	ldi	r30, 0x01	; 1
 598:	66 0f       	add	r22, r22
 59a:	77 1f       	adc	r23, r23
 59c:	88 1f       	adc	r24, r24
 59e:	bb 1f       	adc	r27, r27
 5a0:	62 17       	cp	r22, r18
 5a2:	73 07       	cpc	r23, r19
 5a4:	84 07       	cpc	r24, r20
 5a6:	ba 07       	cpc	r27, r26
 5a8:	20 f0       	brcs	.+8      	; 0x5b2 <__divsf3_pse+0xaa>
 5aa:	62 1b       	sub	r22, r18
 5ac:	73 0b       	sbc	r23, r19
 5ae:	84 0b       	sbc	r24, r20
 5b0:	ba 0b       	sbc	r27, r26
 5b2:	ee 1f       	adc	r30, r30
 5b4:	88 f7       	brcc	.-30     	; 0x598 <__divsf3_pse+0x90>
 5b6:	e0 95       	com	r30
 5b8:	08 95       	ret

000005ba <__fixsfsi>:
 5ba:	04 d0       	rcall	.+8      	; 0x5c4 <__fixunssfsi>
 5bc:	68 94       	set
 5be:	b1 11       	cpse	r27, r1
 5c0:	9c c0       	rjmp	.+312    	; 0x6fa <__fp_szero>
 5c2:	08 95       	ret

000005c4 <__fixunssfsi>:
 5c4:	7f d0       	rcall	.+254    	; 0x6c4 <__fp_splitA>
 5c6:	88 f0       	brcs	.+34     	; 0x5ea <__fixunssfsi+0x26>
 5c8:	9f 57       	subi	r25, 0x7F	; 127
 5ca:	90 f0       	brcs	.+36     	; 0x5f0 <__fixunssfsi+0x2c>
 5cc:	b9 2f       	mov	r27, r25
 5ce:	99 27       	eor	r25, r25
 5d0:	b7 51       	subi	r27, 0x17	; 23
 5d2:	a0 f0       	brcs	.+40     	; 0x5fc <__fixunssfsi+0x38>
 5d4:	d1 f0       	breq	.+52     	; 0x60a <__fixunssfsi+0x46>
 5d6:	66 0f       	add	r22, r22
 5d8:	77 1f       	adc	r23, r23
 5da:	88 1f       	adc	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	1a f0       	brmi	.+6      	; 0x5e6 <__fixunssfsi+0x22>
 5e0:	ba 95       	dec	r27
 5e2:	c9 f7       	brne	.-14     	; 0x5d6 <__fixunssfsi+0x12>
 5e4:	12 c0       	rjmp	.+36     	; 0x60a <__fixunssfsi+0x46>
 5e6:	b1 30       	cpi	r27, 0x01	; 1
 5e8:	81 f0       	breq	.+32     	; 0x60a <__fixunssfsi+0x46>
 5ea:	86 d0       	rcall	.+268    	; 0x6f8 <__fp_zero>
 5ec:	b1 e0       	ldi	r27, 0x01	; 1
 5ee:	08 95       	ret
 5f0:	83 c0       	rjmp	.+262    	; 0x6f8 <__fp_zero>
 5f2:	67 2f       	mov	r22, r23
 5f4:	78 2f       	mov	r23, r24
 5f6:	88 27       	eor	r24, r24
 5f8:	b8 5f       	subi	r27, 0xF8	; 248
 5fa:	39 f0       	breq	.+14     	; 0x60a <__fixunssfsi+0x46>
 5fc:	b9 3f       	cpi	r27, 0xF9	; 249
 5fe:	cc f3       	brlt	.-14     	; 0x5f2 <__fixunssfsi+0x2e>
 600:	86 95       	lsr	r24
 602:	77 95       	ror	r23
 604:	67 95       	ror	r22
 606:	b3 95       	inc	r27
 608:	d9 f7       	brne	.-10     	; 0x600 <__fixunssfsi+0x3c>
 60a:	3e f4       	brtc	.+14     	; 0x61a <__fixunssfsi+0x56>
 60c:	90 95       	com	r25
 60e:	80 95       	com	r24
 610:	70 95       	com	r23
 612:	61 95       	neg	r22
 614:	7f 4f       	sbci	r23, 0xFF	; 255
 616:	8f 4f       	sbci	r24, 0xFF	; 255
 618:	9f 4f       	sbci	r25, 0xFF	; 255
 61a:	08 95       	ret

0000061c <__fp_cmp>:
 61c:	99 0f       	add	r25, r25
 61e:	00 08       	sbc	r0, r0
 620:	55 0f       	add	r21, r21
 622:	aa 0b       	sbc	r26, r26
 624:	e0 e8       	ldi	r30, 0x80	; 128
 626:	fe ef       	ldi	r31, 0xFE	; 254
 628:	16 16       	cp	r1, r22
 62a:	17 06       	cpc	r1, r23
 62c:	e8 07       	cpc	r30, r24
 62e:	f9 07       	cpc	r31, r25
 630:	c0 f0       	brcs	.+48     	; 0x662 <__fp_cmp+0x46>
 632:	12 16       	cp	r1, r18
 634:	13 06       	cpc	r1, r19
 636:	e4 07       	cpc	r30, r20
 638:	f5 07       	cpc	r31, r21
 63a:	98 f0       	brcs	.+38     	; 0x662 <__fp_cmp+0x46>
 63c:	62 1b       	sub	r22, r18
 63e:	73 0b       	sbc	r23, r19
 640:	84 0b       	sbc	r24, r20
 642:	95 0b       	sbc	r25, r21
 644:	39 f4       	brne	.+14     	; 0x654 <__fp_cmp+0x38>
 646:	0a 26       	eor	r0, r26
 648:	61 f0       	breq	.+24     	; 0x662 <__fp_cmp+0x46>
 64a:	23 2b       	or	r18, r19
 64c:	24 2b       	or	r18, r20
 64e:	25 2b       	or	r18, r21
 650:	21 f4       	brne	.+8      	; 0x65a <__fp_cmp+0x3e>
 652:	08 95       	ret
 654:	0a 26       	eor	r0, r26
 656:	09 f4       	brne	.+2      	; 0x65a <__fp_cmp+0x3e>
 658:	a1 40       	sbci	r26, 0x01	; 1
 65a:	a6 95       	lsr	r26
 65c:	8f ef       	ldi	r24, 0xFF	; 255
 65e:	81 1d       	adc	r24, r1
 660:	81 1d       	adc	r24, r1
 662:	08 95       	ret

00000664 <__fp_inf>:
 664:	97 f9       	bld	r25, 7
 666:	9f 67       	ori	r25, 0x7F	; 127
 668:	80 e8       	ldi	r24, 0x80	; 128
 66a:	70 e0       	ldi	r23, 0x00	; 0
 66c:	60 e0       	ldi	r22, 0x00	; 0
 66e:	08 95       	ret

00000670 <__fp_nan>:
 670:	9f ef       	ldi	r25, 0xFF	; 255
 672:	80 ec       	ldi	r24, 0xC0	; 192
 674:	08 95       	ret

00000676 <__fp_pscA>:
 676:	00 24       	eor	r0, r0
 678:	0a 94       	dec	r0
 67a:	16 16       	cp	r1, r22
 67c:	17 06       	cpc	r1, r23
 67e:	18 06       	cpc	r1, r24
 680:	09 06       	cpc	r0, r25
 682:	08 95       	ret

00000684 <__fp_pscB>:
 684:	00 24       	eor	r0, r0
 686:	0a 94       	dec	r0
 688:	12 16       	cp	r1, r18
 68a:	13 06       	cpc	r1, r19
 68c:	14 06       	cpc	r1, r20
 68e:	05 06       	cpc	r0, r21
 690:	08 95       	ret

00000692 <__fp_round>:
 692:	09 2e       	mov	r0, r25
 694:	03 94       	inc	r0
 696:	00 0c       	add	r0, r0
 698:	11 f4       	brne	.+4      	; 0x69e <__fp_round+0xc>
 69a:	88 23       	and	r24, r24
 69c:	52 f0       	brmi	.+20     	; 0x6b2 <__fp_round+0x20>
 69e:	bb 0f       	add	r27, r27
 6a0:	40 f4       	brcc	.+16     	; 0x6b2 <__fp_round+0x20>
 6a2:	bf 2b       	or	r27, r31
 6a4:	11 f4       	brne	.+4      	; 0x6aa <__fp_round+0x18>
 6a6:	60 ff       	sbrs	r22, 0
 6a8:	04 c0       	rjmp	.+8      	; 0x6b2 <__fp_round+0x20>
 6aa:	6f 5f       	subi	r22, 0xFF	; 255
 6ac:	7f 4f       	sbci	r23, 0xFF	; 255
 6ae:	8f 4f       	sbci	r24, 0xFF	; 255
 6b0:	9f 4f       	sbci	r25, 0xFF	; 255
 6b2:	08 95       	ret

000006b4 <__fp_split3>:
 6b4:	57 fd       	sbrc	r21, 7
 6b6:	90 58       	subi	r25, 0x80	; 128
 6b8:	44 0f       	add	r20, r20
 6ba:	55 1f       	adc	r21, r21
 6bc:	59 f0       	breq	.+22     	; 0x6d4 <__fp_splitA+0x10>
 6be:	5f 3f       	cpi	r21, 0xFF	; 255
 6c0:	71 f0       	breq	.+28     	; 0x6de <__fp_splitA+0x1a>
 6c2:	47 95       	ror	r20

000006c4 <__fp_splitA>:
 6c4:	88 0f       	add	r24, r24
 6c6:	97 fb       	bst	r25, 7
 6c8:	99 1f       	adc	r25, r25
 6ca:	61 f0       	breq	.+24     	; 0x6e4 <__fp_splitA+0x20>
 6cc:	9f 3f       	cpi	r25, 0xFF	; 255
 6ce:	79 f0       	breq	.+30     	; 0x6ee <__fp_splitA+0x2a>
 6d0:	87 95       	ror	r24
 6d2:	08 95       	ret
 6d4:	12 16       	cp	r1, r18
 6d6:	13 06       	cpc	r1, r19
 6d8:	14 06       	cpc	r1, r20
 6da:	55 1f       	adc	r21, r21
 6dc:	f2 cf       	rjmp	.-28     	; 0x6c2 <__fp_split3+0xe>
 6de:	46 95       	lsr	r20
 6e0:	f1 df       	rcall	.-30     	; 0x6c4 <__fp_splitA>
 6e2:	08 c0       	rjmp	.+16     	; 0x6f4 <__fp_splitA+0x30>
 6e4:	16 16       	cp	r1, r22
 6e6:	17 06       	cpc	r1, r23
 6e8:	18 06       	cpc	r1, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	f1 cf       	rjmp	.-30     	; 0x6d0 <__fp_splitA+0xc>
 6ee:	86 95       	lsr	r24
 6f0:	71 05       	cpc	r23, r1
 6f2:	61 05       	cpc	r22, r1
 6f4:	08 94       	sec
 6f6:	08 95       	ret

000006f8 <__fp_zero>:
 6f8:	e8 94       	clt

000006fa <__fp_szero>:
 6fa:	bb 27       	eor	r27, r27
 6fc:	66 27       	eor	r22, r22
 6fe:	77 27       	eor	r23, r23
 700:	cb 01       	movw	r24, r22
 702:	97 f9       	bld	r25, 7
 704:	08 95       	ret

00000706 <__gesf2>:
 706:	8a df       	rcall	.-236    	; 0x61c <__fp_cmp>
 708:	08 f4       	brcc	.+2      	; 0x70c <__gesf2+0x6>
 70a:	8f ef       	ldi	r24, 0xFF	; 255
 70c:	08 95       	ret

0000070e <__mulsf3>:
 70e:	0b d0       	rcall	.+22     	; 0x726 <__mulsf3x>
 710:	c0 cf       	rjmp	.-128    	; 0x692 <__fp_round>
 712:	b1 df       	rcall	.-158    	; 0x676 <__fp_pscA>
 714:	28 f0       	brcs	.+10     	; 0x720 <__mulsf3+0x12>
 716:	b6 df       	rcall	.-148    	; 0x684 <__fp_pscB>
 718:	18 f0       	brcs	.+6      	; 0x720 <__mulsf3+0x12>
 71a:	95 23       	and	r25, r21
 71c:	09 f0       	breq	.+2      	; 0x720 <__mulsf3+0x12>
 71e:	a2 cf       	rjmp	.-188    	; 0x664 <__fp_inf>
 720:	a7 cf       	rjmp	.-178    	; 0x670 <__fp_nan>
 722:	11 24       	eor	r1, r1
 724:	ea cf       	rjmp	.-44     	; 0x6fa <__fp_szero>

00000726 <__mulsf3x>:
 726:	c6 df       	rcall	.-116    	; 0x6b4 <__fp_split3>
 728:	a0 f3       	brcs	.-24     	; 0x712 <__mulsf3+0x4>

0000072a <__mulsf3_pse>:
 72a:	95 9f       	mul	r25, r21
 72c:	d1 f3       	breq	.-12     	; 0x722 <__mulsf3+0x14>
 72e:	95 0f       	add	r25, r21
 730:	50 e0       	ldi	r21, 0x00	; 0
 732:	55 1f       	adc	r21, r21
 734:	62 9f       	mul	r22, r18
 736:	f0 01       	movw	r30, r0
 738:	72 9f       	mul	r23, r18
 73a:	bb 27       	eor	r27, r27
 73c:	f0 0d       	add	r31, r0
 73e:	b1 1d       	adc	r27, r1
 740:	63 9f       	mul	r22, r19
 742:	aa 27       	eor	r26, r26
 744:	f0 0d       	add	r31, r0
 746:	b1 1d       	adc	r27, r1
 748:	aa 1f       	adc	r26, r26
 74a:	64 9f       	mul	r22, r20
 74c:	66 27       	eor	r22, r22
 74e:	b0 0d       	add	r27, r0
 750:	a1 1d       	adc	r26, r1
 752:	66 1f       	adc	r22, r22
 754:	82 9f       	mul	r24, r18
 756:	22 27       	eor	r18, r18
 758:	b0 0d       	add	r27, r0
 75a:	a1 1d       	adc	r26, r1
 75c:	62 1f       	adc	r22, r18
 75e:	73 9f       	mul	r23, r19
 760:	b0 0d       	add	r27, r0
 762:	a1 1d       	adc	r26, r1
 764:	62 1f       	adc	r22, r18
 766:	83 9f       	mul	r24, r19
 768:	a0 0d       	add	r26, r0
 76a:	61 1d       	adc	r22, r1
 76c:	22 1f       	adc	r18, r18
 76e:	74 9f       	mul	r23, r20
 770:	33 27       	eor	r19, r19
 772:	a0 0d       	add	r26, r0
 774:	61 1d       	adc	r22, r1
 776:	23 1f       	adc	r18, r19
 778:	84 9f       	mul	r24, r20
 77a:	60 0d       	add	r22, r0
 77c:	21 1d       	adc	r18, r1
 77e:	82 2f       	mov	r24, r18
 780:	76 2f       	mov	r23, r22
 782:	6a 2f       	mov	r22, r26
 784:	11 24       	eor	r1, r1
 786:	9f 57       	subi	r25, 0x7F	; 127
 788:	50 40       	sbci	r21, 0x00	; 0
 78a:	8a f0       	brmi	.+34     	; 0x7ae <__mulsf3_pse+0x84>
 78c:	e1 f0       	breq	.+56     	; 0x7c6 <__mulsf3_pse+0x9c>
 78e:	88 23       	and	r24, r24
 790:	4a f0       	brmi	.+18     	; 0x7a4 <__mulsf3_pse+0x7a>
 792:	ee 0f       	add	r30, r30
 794:	ff 1f       	adc	r31, r31
 796:	bb 1f       	adc	r27, r27
 798:	66 1f       	adc	r22, r22
 79a:	77 1f       	adc	r23, r23
 79c:	88 1f       	adc	r24, r24
 79e:	91 50       	subi	r25, 0x01	; 1
 7a0:	50 40       	sbci	r21, 0x00	; 0
 7a2:	a9 f7       	brne	.-22     	; 0x78e <__mulsf3_pse+0x64>
 7a4:	9e 3f       	cpi	r25, 0xFE	; 254
 7a6:	51 05       	cpc	r21, r1
 7a8:	70 f0       	brcs	.+28     	; 0x7c6 <__mulsf3_pse+0x9c>
 7aa:	5c cf       	rjmp	.-328    	; 0x664 <__fp_inf>
 7ac:	a6 cf       	rjmp	.-180    	; 0x6fa <__fp_szero>
 7ae:	5f 3f       	cpi	r21, 0xFF	; 255
 7b0:	ec f3       	brlt	.-6      	; 0x7ac <__mulsf3_pse+0x82>
 7b2:	98 3e       	cpi	r25, 0xE8	; 232
 7b4:	dc f3       	brlt	.-10     	; 0x7ac <__mulsf3_pse+0x82>
 7b6:	86 95       	lsr	r24
 7b8:	77 95       	ror	r23
 7ba:	67 95       	ror	r22
 7bc:	b7 95       	ror	r27
 7be:	f7 95       	ror	r31
 7c0:	e7 95       	ror	r30
 7c2:	9f 5f       	subi	r25, 0xFF	; 255
 7c4:	c1 f7       	brne	.-16     	; 0x7b6 <__mulsf3_pse+0x8c>
 7c6:	fe 2b       	or	r31, r30
 7c8:	88 0f       	add	r24, r24
 7ca:	91 1d       	adc	r25, r1
 7cc:	96 95       	lsr	r25
 7ce:	87 95       	ror	r24
 7d0:	97 f9       	bld	r25, 7
 7d2:	08 95       	ret

000007d4 <_exit>:
 7d4:	f8 94       	cli

000007d6 <__stop_program>:
 7d6:	ff cf       	rjmp	.-2      	; 0x7d6 <__stop_program>
